import mongoose from 'mongoose';
const {ObjectId}=mongoose.Schema.Types;
// when agency wants to register a new scholarship
const applyNowSeekerSchema = new mongoose.Schema({
    // Corresponding to agencySchemeSchema objectID so that on clicking apply now it creates an empty application form in apply now collection
      // agencyID:{
      //   type:ObjectId,
      //   ref:'Agency'
      //  },
       seekerID:{
        type:ObjectId,
        ref:'Seeker'
       },
       scholarshipID:{
        type:ObjectId,
        ref:'Scholarship'
       },
       email:{
        type:String,
        required:true
       },
       phNo:{
        type:String,
        required:true
       },
       firstName:{
        type:String,
        required:true
       },
       middleName:{
        type:String,
        required:false
       },
       lastName:{
        type:String,
        required:true
       },
       guardianFirstName:{
        type:String,
        required:true
       },
       guardianMiddleName:{
        type:String,
        required:false
       },
       guardianLastName:{
        type:String,
        required:true
       },
       dateOfBirth:{
        type:String,
        required:true
       },
       category:{
        type:String,
        required:true
       },
       sex:{
        type:String,
        required:true
       },
       marks12:{
        type:String,
        required:true
       },
       marks12File:{
        type:String,
        required:true
       },
       marks10:{
        type:String,
        required:true
       },
       marks10File:{
        type:String,
        required:true
       },
       highestQualification:{
        type:String,
       },
       marks:{
        type:String,
        required:true
       },
       income:{
        type:String,
        required:true
       },
       panNo:{
        type:String,
        required:false
       },
       state:{
        type:String,
        required:true
       },
       address:{
        type:String,
        required:true
       },
       locality:{
        type:String,
        required:true
       },
       town:{
        type:String,
        required:true
       },
       pincode:{
        type:String,
        required:true
       },
       resume:{
        type:String,
        required:false
       },
       ifscCode:{
        type:String,
        required:true
       },
       banker:{
        type:String,
        required:true
       },
       bankBranch:{
        type:String,
        required:true
       },
       accountType:{
        type:String,
        required:false
       },
       accountNo:{
        type:String,
        required:true
       },
       proposal:{
        type:String,
        required:true
       },
       status:{
        type:String,
        required:false
        //applied, rejected, accepted, amended
       },
        meetingDate:{
          type:String,
          required:false
        },
        meetingStartTime:{
          type:String,
          required:false
        },
        meetingEndTime:{
          type:String,
          required:false
        },
       schedledMeeting:{
        type:String,
        required:false
        //meetlink
       },
       othersFile:{
        type:Array,
        required:false
       }

});


let ApplySeeker= mongoose.models.ApplySeeker || mongoose.model('ApplySeeker', applyNowSeekerSchema);
export default ApplySeeker;